- name: Loading SSH KEY from localhost (if any)
  set_fact: ssh_key="{{ lookup('file','{{ admin_ssh_publickey }}') }}"
  when: admin_ssh_publickey is defined
  tags: [ ocp, prepare ]

- name: Copy a SSH Key (if does exist)
  lineinfile: dest=/root/.ssh/authorized_keys state=present create=yes line="{{ ssh_key }}"
  when: ssh_key is defined
  tags: [ ocp, prepare ]

- name: Allow this host to log as root
  lineinfile: dest=/etc/ssh/sshd_config state=present regexp="^PermitRootLogin" line="# PermitRootLogin yes"
  tags: [ ocp, prepare ]

- name: Restart SSHD Service
  service: name=sshd state=restarted
  tags: [ ocp, prepare ]

- name: Create OpenShift's Master SSH Key
  lineinfile: dest=/root/.ssh/authorized_keys state=present create=yes line="{{ hostvars[groups.openshift_master_group[0]]['openshift_master_ssh_key'] }}"
  tags: [ ocp, prepare ]

- name: Installing Basic Applications
  yum: name="{{ item }}" state=present
  with_items: "{{ prereqs_packages }}"
  tags: [ ocp, prepare ]

- name: Create a partition for Docker
  command: parted {{ docker_device }} --script 'mklabel msdos mkpart primary 0% 100%'
  tags: [ ocp, prepare ]

- name: Create a VG named docker-vg (used for Docker)
  lvg: vg=docker-vg pvs={{ docker_device_partition }}
  tags: [ ocp, prepare ]

- name: Configuring Docker-Storage-Setup first
  lineinfile: dest=/etc/sysconfig/docker-storage-setup line="VG=docker-vg"
  tags: [ ocp, prepare ]

- name: Run a Docker-Storage-Setup
  command: /usr/bin/docker-storage-setup
  tags: [ ocp, prepare ]

- name: Execute a Atomic OpenShift Excluder
  command: atomic-openshift-excluder unexclude
  tags: [ ocp, prepare ]

- name: Setting Docker configuration with with the correct info
  lineinfile: dest=/etc/sysconfig/docker regexp="OPTIONS=.*" line="OPTIONS=\"--selinux-enabled --insecure-registry 172.30.0.0/16  --log-driver=journald\""
  tags: [ ocp, prepare ]

- name: Run this command to guarantee Certified Containers running
  command: /usr/libexec/rhsmcertd-worker
  tags: [ ocp, prepare ]
