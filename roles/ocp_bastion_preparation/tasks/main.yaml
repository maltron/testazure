- name: "Generate keys to be copied to whole cluster"
  command: "ssh-keygen -b 4096 -t rsa -f /root/.ssh/id_rsa -q -N \"\""
  tags: [ ocp, prepare_bastion ]

- name: Read the content of this key
  slurp: src=/root/.ssh/id_rsa.pub
  register: content_encoded
  tags: [ ocp, prepare_bastion ]

- name: Define the content of the key
  set_fact: bastion_ssh_key="{{ content_encoded.content | b64decode }}"
  tags: [ ocp, prepare_bastion ]

- name: "Installing OpenShift's Utils"
  yum: name="atomic-openshift-utils" state=latest
  tags: [ ocp, prepare_bastion ]

- name: Define the final Inventory for installation
  template: src=/tmp/ansible_hosts.j2 dest=/etc/ansible/hosts
  tags: [ ocp, prepare_bastion ]

- name: Disable 'host_key_checking' in Ansible
  lineinfile: dest=/etc/ansible/ansible.cfg regexp="host_key_checking" state=present line="host_key_checking = False"
  tags: [ ocp, prepare_bastion ]

- name: Create directory "postinstall"
  file: path=/root/postinstall/templates state=directory
  tags: [ ocp, prepare_bastion ]

- name: Download all the necessary playbooks for post-install
  uri: url=https://raw.githubusercontent.com/latam-tech-office/install-openshift/master/postinstall/{{ item }}
       method=GET status_code=200 creates=True dest=/root/postinstall/{{ item }}
  with_items:
     - create_persistentvolumes.yaml
     - post-install.yaml
     - templates/persistentvolume-gitlab-shell.yaml.j2
     - templates/persistentvolume.yaml.j2
  tags: [ ocp, prepare_bastion ]

- name: Generating OpenShift PostInstall script
  template: src=postinstall/post-openshift-install.sh.j2 dest=/root/postinstall/post-openshift-install.sh mode=a+x
  tags: [ ocp, prepare_bastion ]
